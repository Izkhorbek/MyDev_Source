// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignupLogin.API.Data;

#nullable disable

namespace SignupLogin.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230819092137_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LibCommon.HttpModels.UserCompanyInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("account_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("accountant_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("address_of_company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("are_you_qqs_payer")
                        .HasColumnType("int");

                    b.Property<string>("bank_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("company_logo_url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("company_phone_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("counsel_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("created_date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("document")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("document_index")
                        .HasColumnType("int");

                    b.Property<int>("is_accountant_provided")
                        .HasColumnType("int");

                    b.Property<int>("is_legal_counsel_provided")
                        .HasColumnType("int");

                    b.Property<string>("name_of_bank")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name_of_signer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("position_of_signer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("position_of_signer_index")
                        .HasColumnType("int");

                    b.Property<string>("qqs_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("stir_of_company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("UserCompanyInfo", (string)null);
                });

            modelBuilder.Entity("SignupLogin.API.Models.Register", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("lan_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("on_notification")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("reg_date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("token")
                        .HasColumnType("longtext");

                    b.HasKey("username");

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
